### ビット演算 ###

# ~ :ビット反転
# & :ビット積
# | :ビット和
# ^ :排他的論理和
# >> :右ビットシフト
# << :左ビットシフト

p (~0b1010).to_s(2)  # => "-1011"
p (0b1010 & 0b1100).to_s(2)  # => "1000"
p (0b1010 | 0b1100).to_s(2)  # => "1110"
p (0b1010 ^ 0b1100).to_s(2)  # => "110"
p (0b1010 >> 1).to_s(2)  # => "101"
p (0b1010 << 1).to_s(2)  # => "10100"
